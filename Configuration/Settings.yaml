
Sandstorm:
  Plumber:

    profilePath: '%FLOW_PATH_DATA%Logs/Profiles'

    calculations:

      methodCallsOnObject:
        label: 'No. of Method Calls'
        type: regexSum
        regex: '#==>(.*)::.*#'

      objectCreations:
        label: 'No. of Object Creations'
        type: regexSum
        regex: '#==>(.*)::__construct#'

#      objectCreationsInDoctrine:
#        label: 'No. of Object Creations in doctrine'
#        type: regexSum
#        regex: '#.*==>Doctrine\\Common(.*)::__construct#'

      totalNeosRenderingTime:
        label: 'Total Neos Rendering Time'
        type: timerSum
        timerName: 'Neos TypoScript Rendering'
      totalRuntime:
        label: 'Runtime (ms)'
        type: timerSum
        timerName: 'Profiling Run'
#        crossfilter:
#          numberOfBars: 30

      totalMemory:
        label: 'Memory (kb)'
        type: maxMemory

      startTime:
        label: 'Date'
        type: startTime
        listDisplayFn: 'function(d) { var f = d3.time.format("%Y-%m-%d %H:%M:%S"); return f(d.startTime.value);};'
        crossfilter:
          chartInitializer: |
            var dateDim = profileCrossfilter.dimension(function(d) { return d3.time.day(d["startTime"].value);});

            theChart = barChart()
              .dimension(dateDim)
              .numberOfBars(20)
              .graphWidth(600)
              .group(dateDim.group())
              .x(d3.time.scale()
                .domain([startTimeBounds.min, startTimeBounds.max])
                .rangeRound([0, 600]));
            charts.push(theChart);

            var timeDim = profileCrossfilter.dimension(function(d) { return d["startTime"].value.getHours() + d["startTime"].value.getMinutes() / 60; });

            theChart = barChart()
              .dimension(timeDim)
              .numberOfBars(20)
              .graphWidth(240)
              .group(timeDim.group(Math.floor))
              .x(d3.scale.linear()
                .domain([0, 24])
                .rangeRound([0, 240]));
            charts.push(theChart);